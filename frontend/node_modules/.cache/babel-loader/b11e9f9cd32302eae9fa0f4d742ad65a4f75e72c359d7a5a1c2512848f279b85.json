{"ast":null,"code":"var _jsxFileName = \"/Users/ztlab98/Downloads/shopping-react-assignment-main/src/pages/Profile.js\",\n  _s = $RefreshSig$();\n// import { useAuth } from \"../utils/auth\"\n// import { Link } from \"react-router-dom\"\n// import * as yup from \"yup\"\n// import { useForm } from \"react-hook-form\"\n// import { yupResolver } from \"@hookform/resolvers/yup\"\n// import { useState } from \"react\"\n// import Navbar from \"../components/Navbar\"\n\n// const Profile = () => {\n//   const auth = useAuth()\n//   const [error, setError] = useState(false)\n//   const [successMessage, setSuccessMessage] = useState(\"\")\n\n//   const loggedInUser = auth.user\n\n//   const allUsers = JSON.parse(localStorage.getItem(\"users\"))\n//   //   const userDetail = allUsers?.find((user) => user.email === loggedInUser.email)\n//   const userDetail = allUsers?.filter((user) => {\n//     return loggedInUser.email === user.email\n//   })\n//   const data = userDetail[0]\n//   console.log(\"data\", data)\n//   const [userData, setUserData] = useState(data)\n\n//   const handleFieldChange = (event) => {\n//     // console.log(\"onchange\")\n//     const { name, value } = event.target\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     })\n//     // console.log(\"userdata\", userData)\n//   }\n\n//   const onSubmit = (submittedData) => {\n//     // console.log(\"profile\", submittedData)\n//     const userIndex = allUsers.findIndex((user) => user.email === data?.email)\n\n//     // check email is already exists or not\n//     const emailExists = allUsers?.filter(\n//       (user) => user.email === submittedData.email\n//     )\n\n//     console.log(emailExists.length)\n\n//     if (emailExists.length > 0 && submittedData.email !== data?.email) {\n//       setError(\"Email Already exists.\")\n//       setTimeout(() => {\n//         setError(\"\")\n//       }, 2000)\n//     } else {\n//       if (userIndex !== -1) {\n//         // Update the user's data with the submitted data\n//         allUsers[userIndex] = { ...data, ...submittedData }\n\n//         // Save the updated data back to local storage\n//         localStorage.setItem(\"users\", JSON.stringify(allUsers))\n\n//         // Set a success message\n//         setSuccessMessage(\"Profile updated successfully\")\n\n//         // Clear the success message after 5 seconds (5000 milliseconds)\n//         setTimeout(() => {\n//           setSuccessMessage(\"\")\n//         }, 5000)\n//       } else {\n//         setError(\"User not found\")\n//       }\n//     }\n//   }\n\n//   const schema = yup.object().shape({\n//     firstName: yup.string().required(),\n//     lastName: yup.string().required(),\n//     mobileNumber: yup.string().min(10).max(10).required(),\n//     email: yup.string().email().required(),\n//   })\n\n//   const {\n//     handleSubmit,\n//     register,\n//     formState: { errors },\n//   } = useForm({ resolver: yupResolver(schema) })\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       {error && <p>{error}</p>}\n//       {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//       <div className=\"container\">\n//         <form onSubmit={handleSubmit(onSubmit)} className=\"signupForm\">\n//           <h3 className=\"text-center mb-4\">Edit Profile</h3>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"firstName\" className=\"form-label\">\n//               First Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               name=\"firstName\"\n//               defaultValue={data?.firstName}\n//               onChange={handleFieldChange}\n//               {...register(\"firstName\")}\n//             />\n//             <div className=\"form-text\">\n//               {errors.firstName && <>{errors.firstName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"lastName\" className=\"form-label\">\n//               Last Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"Last Name\"\n//               name=\"lastName\"\n//               {...register(\"lastName\")}\n//               defaultValue={data?.lastName}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.lastName && <>{errors.lastName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"mobileNumber\" className=\"form-label\">\n//               Mobile Number\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"number\"\n//               placeholder=\"Mobile Number\"\n//               name=\"mobileNumber\"\n//               {...register(\"mobileNumber\")}\n//               defaultValue={data?.mobileNumber}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.mobileNumber && <>{errors.mobileNumber.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               name=\"email\"\n//               {...register(\"email\")}\n//               defaultValue={data?.email}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.email && <>{errors.email.message}</>}\n//             </div>\n//           </div>\n\n//           <div>\n//             <button type=\"submit\" className=\"btn btn-primary me-3\">\n//               Save\n//             </button>\n\n//             <Link to=\"/changepassword\" className=\"me-2\">\n//               Reset Password\n//             </Link>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Profile\n\nimport { useAuth } from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport useToast from \"../hooks/useToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const auth = useAuth();\n  const [error, setError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const loggedInUser = auth.user;\n  const allUsers = JSON.parse(localStorage.getItem(\"users\"));\n  const userDetail = allUsers === null || allUsers === void 0 ? void 0 : allUsers.filter(user => {\n    return loggedInUser.email === user.email;\n  });\n  const data = userDetail[0];\n  const [userData, setUserData] = useState(data);\n  const handleFieldChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const onSubmit = submittedData => {\n    const userIndex = allUsers.findIndex(user => user.email === (data === null || data === void 0 ? void 0 : data.email));\n    const emailExists = allUsers === null || allUsers === void 0 ? void 0 : allUsers.filter(user => user.email === submittedData.email);\n    if (emailExists.length > 0 && submittedData.email !== (data === null || data === void 0 ? void 0 : data.email)) {\n      setError(\"Email Already exists.\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 2000);\n    } else {\n      if (userIndex !== -1) {\n        allUsers[userIndex] = {\n          ...data,\n          ...submittedData\n        };\n        localStorage.setItem(\"users\", JSON.stringify(allUsers));\n        setSuccessMessage(\"Profile updated successfully\");\n        setTimeout(() => {\n          setSuccessMessage(\"\");\n        }, 5000);\n      } else {\n        setError(\"User not found\");\n      }\n    }\n  };\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    mobileNumber: yup.string().min(10).max(10).required(),\n    email: yup.string().email().required()\n  });\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"w-50 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-4\",\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            className: \"form-label\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"First Name\",\n            name: \"firstName\",\n            defaultValue: data === null || data === void 0 ? void 0 : data.firstName,\n            onChange: handleFieldChange,\n            ...register(\"firstName\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: errors.firstName.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            className: \"form-label\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"Last Name\",\n            name: \"lastName\",\n            ...register(\"lastName\"),\n            defaultValue: data === null || data === void 0 ? void 0 : data.lastName,\n            onChange: handleFieldChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: errors.lastName.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mobileNumber\",\n            className: \"form-label\",\n            children: \"Mobile Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            placeholder: \"Mobile Number\",\n            name: \"mobileNumber\",\n            ...register(\"mobileNumber\"),\n            defaultValue: data === null || data === void 0 ? void 0 : data.mobileNumber,\n            onChange: handleFieldChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), errors.mobileNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: errors.mobileNumber.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"email\",\n            placeholder: \"Email\",\n            name: \"email\",\n            ...register(\"email\"),\n            defaultValue: data === null || data === void 0 ? void 0 : data.email,\n            onChange: handleFieldChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary me-3\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/changepassword\",\n            className: \"btn btn-secondary\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"pM8oq+pa3yYg7X1mrg0RE13Z7Ok=\", false, function () {\n  return [useAuth, useForm];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useAuth","Link","yup","useForm","yupResolver","useState","Navbar","useToast","jsxDEV","_jsxDEV","Profile","_s","auth","error","setError","successMessage","setSuccessMessage","loggedInUser","user","allUsers","JSON","parse","localStorage","getItem","userDetail","filter","email","data","userData","setUserData","handleFieldChange","event","name","value","target","onSubmit","submittedData","userIndex","findIndex","emailExists","length","setTimeout","setItem","stringify","schema","object","shape","firstName","string","required","lastName","mobileNumber","min","max","handleSubmit","register","formState","errors","resolver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","defaultValue","onChange","message","to","_c","$RefreshReg$"],"sources":["/Users/ztlab98/Downloads/shopping-react-assignment-main/src/pages/Profile.js"],"sourcesContent":["// import { useAuth } from \"../utils/auth\"\n// import { Link } from \"react-router-dom\"\n// import * as yup from \"yup\"\n// import { useForm } from \"react-hook-form\"\n// import { yupResolver } from \"@hookform/resolvers/yup\"\n// import { useState } from \"react\"\n// import Navbar from \"../components/Navbar\"\n\n// const Profile = () => {\n//   const auth = useAuth()\n//   const [error, setError] = useState(false)\n//   const [successMessage, setSuccessMessage] = useState(\"\")\n\n//   const loggedInUser = auth.user\n\n//   const allUsers = JSON.parse(localStorage.getItem(\"users\"))\n//   //   const userDetail = allUsers?.find((user) => user.email === loggedInUser.email)\n//   const userDetail = allUsers?.filter((user) => {\n//     return loggedInUser.email === user.email\n//   })\n//   const data = userDetail[0]\n//   console.log(\"data\", data)\n//   const [userData, setUserData] = useState(data)\n\n//   const handleFieldChange = (event) => {\n//     // console.log(\"onchange\")\n//     const { name, value } = event.target\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     })\n//     // console.log(\"userdata\", userData)\n//   }\n\n//   const onSubmit = (submittedData) => {\n//     // console.log(\"profile\", submittedData)\n//     const userIndex = allUsers.findIndex((user) => user.email === data?.email)\n\n//     // check email is already exists or not\n//     const emailExists = allUsers?.filter(\n//       (user) => user.email === submittedData.email\n//     )\n\n//     console.log(emailExists.length)\n\n//     if (emailExists.length > 0 && submittedData.email !== data?.email) {\n//       setError(\"Email Already exists.\")\n//       setTimeout(() => {\n//         setError(\"\")\n//       }, 2000)\n//     } else {\n//       if (userIndex !== -1) {\n//         // Update the user's data with the submitted data\n//         allUsers[userIndex] = { ...data, ...submittedData }\n\n//         // Save the updated data back to local storage\n//         localStorage.setItem(\"users\", JSON.stringify(allUsers))\n\n//         // Set a success message\n//         setSuccessMessage(\"Profile updated successfully\")\n\n//         // Clear the success message after 5 seconds (5000 milliseconds)\n//         setTimeout(() => {\n//           setSuccessMessage(\"\")\n//         }, 5000)\n//       } else {\n//         setError(\"User not found\")\n//       }\n//     }\n//   }\n\n//   const schema = yup.object().shape({\n//     firstName: yup.string().required(),\n//     lastName: yup.string().required(),\n//     mobileNumber: yup.string().min(10).max(10).required(),\n//     email: yup.string().email().required(),\n//   })\n\n//   const {\n//     handleSubmit,\n//     register,\n//     formState: { errors },\n//   } = useForm({ resolver: yupResolver(schema) })\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       {error && <p>{error}</p>}\n//       {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//       <div className=\"container\">\n//         <form onSubmit={handleSubmit(onSubmit)} className=\"signupForm\">\n//           <h3 className=\"text-center mb-4\">Edit Profile</h3>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"firstName\" className=\"form-label\">\n//               First Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               name=\"firstName\"\n//               defaultValue={data?.firstName}\n//               onChange={handleFieldChange}\n//               {...register(\"firstName\")}\n//             />\n//             <div className=\"form-text\">\n//               {errors.firstName && <>{errors.firstName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"lastName\" className=\"form-label\">\n//               Last Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"Last Name\"\n//               name=\"lastName\"\n//               {...register(\"lastName\")}\n//               defaultValue={data?.lastName}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.lastName && <>{errors.lastName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"mobileNumber\" className=\"form-label\">\n//               Mobile Number\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"number\"\n//               placeholder=\"Mobile Number\"\n//               name=\"mobileNumber\"\n//               {...register(\"mobileNumber\")}\n//               defaultValue={data?.mobileNumber}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.mobileNumber && <>{errors.mobileNumber.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               name=\"email\"\n//               {...register(\"email\")}\n//               defaultValue={data?.email}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.email && <>{errors.email.message}</>}\n//             </div>\n//           </div>\n\n//           <div>\n//             <button type=\"submit\" className=\"btn btn-primary me-3\">\n//               Save\n//             </button>\n\n//             <Link to=\"/changepassword\" className=\"me-2\">\n//               Reset Password\n//             </Link>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Profile\n\nimport { useAuth } from \"../utils/auth\"\nimport { Link } from \"react-router-dom\"\nimport * as yup from \"yup\"\nimport { useForm } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { useState } from \"react\"\nimport Navbar from \"../components/Navbar\"\nimport useToast from \"../hooks/useToast\"\n\nconst Profile = () => {\n  const auth = useAuth()\n  const [error, setError] = useState(false)\n  const [successMessage, setSuccessMessage] = useState(\"\")\n\n  const loggedInUser = auth.user\n\n  const allUsers = JSON.parse(localStorage.getItem(\"users\"))\n  const userDetail = allUsers?.filter((user) => {\n    return loggedInUser.email === user.email\n  })\n  const data = userDetail[0]\n  const [userData, setUserData] = useState(data)\n\n  const handleFieldChange = (event) => {\n    const { name, value } = event.target\n    setUserData({\n      ...userData,\n      [name]: value,\n    })\n  }\n\n  const onSubmit = (submittedData) => {\n    const userIndex = allUsers.findIndex((user) => user.email === data?.email)\n    const emailExists = allUsers?.filter(\n      (user) => user.email === submittedData.email\n    )\n\n    if (emailExists.length > 0 && submittedData.email !== data?.email) {\n      setError(\"Email Already exists.\")\n      setTimeout(() => {\n        setError(\"\")\n      }, 2000)\n    } else {\n      if (userIndex !== -1) {\n        allUsers[userIndex] = { ...data, ...submittedData }\n        localStorage.setItem(\"users\", JSON.stringify(allUsers))\n        setSuccessMessage(\"Profile updated successfully\")\n        setTimeout(() => {\n          setSuccessMessage(\"\")\n        }, 5000)\n      } else {\n        setError(\"User not found\")\n      }\n    }\n  }\n\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    mobileNumber: yup.string().min(10).max(10).required(),\n    email: yup.string().email().required(),\n  })\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) })\n\n  return (\n    <div className=\"container mt-5\">\n      <Navbar />\n      {error && <p className=\"alert alert-danger\">{error}</p>}\n      {successMessage && (\n        <p className=\"alert alert-success\">{successMessage}</p>\n      )}\n      <div className=\"container mt-4\">\n        <form onSubmit={handleSubmit(onSubmit)} className=\"w-50 mx-auto\">\n          <h3 className=\"text-center mb-4\">Edit Profile</h3>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"firstName\" className=\"form-label\">\n              First Name\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"First Name\"\n              name=\"firstName\"\n              defaultValue={data?.firstName}\n              onChange={handleFieldChange}\n              {...register(\"firstName\")}\n            />\n            {errors.firstName && (\n              <p className=\"text-danger\">{errors.firstName.message}</p>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"lastName\" className=\"form-label\">\n              Last Name\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Last Name\"\n              name=\"lastName\"\n              {...register(\"lastName\")}\n              defaultValue={data?.lastName}\n              onChange={handleFieldChange}\n            />\n            {errors.lastName && (\n              <p className=\"text-danger\">{errors.lastName.message}</p>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"mobileNumber\" className=\"form-label\">\n              Mobile Number\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              placeholder=\"Mobile Number\"\n              name=\"mobileNumber\"\n              {...register(\"mobileNumber\")}\n              defaultValue={data?.mobileNumber}\n              onChange={handleFieldChange}\n            />\n            {errors.mobileNumber && (\n              <p className=\"text-danger\">{errors.mobileNumber.message}</p>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              {...register(\"email\")}\n              defaultValue={data?.email}\n              onChange={handleFieldChange}\n            />\n            {errors.email && (\n              <p className=\"text-danger\">{errors.email.message}</p>\n            )}\n          </div>\n\n          <div>\n            <button type=\"submit\" className=\"btn btn-primary me-3\">\n              Save\n            </button>\n            <Link to=\"/changepassword\" className=\"btn btn-secondary\">\n              Reset Password\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGZ,OAAO,CAAC,CAAC;EACtB,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}