{"ast":null,"code":"var _jsxFileName = \"/Users/ztlab98/Downloads/shopping-react-assignment-main/src/pages/Profile.js\",\n  _s = $RefreshSig$();\n// import { useAuth } from \"../utils/auth\"\n// import { Link } from \"react-router-dom\"\n// import * as yup from \"yup\"\n// import { useForm } from \"react-hook-form\"\n// import { yupResolver } from \"@hookform/resolvers/yup\"\n// import { useState } from \"react\"\n// import Navbar from \"../components/Navbar\"\n\n// const Profile = () => {\n//   const auth = useAuth()\n//   const [error, setError] = useState(false)\n//   const [successMessage, setSuccessMessage] = useState(\"\")\n\n//   const loggedInUser = auth.user\n\n//   const allUsers = JSON.parse(localStorage.getItem(\"users\"))\n//   //   const userDetail = allUsers?.find((user) => user.email === loggedInUser.email)\n//   const userDetail = allUsers?.filter((user) => {\n//     return loggedInUser.email === user.email\n//   })\n//   const data = userDetail[0]\n//   console.log(\"data\", data)\n//   const [userData, setUserData] = useState(data)\n\n//   const handleFieldChange = (event) => {\n//     // console.log(\"onchange\")\n//     const { name, value } = event.target\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     })\n//     // console.log(\"userdata\", userData)\n//   }\n\n//   const onSubmit = (submittedData) => {\n//     // console.log(\"profile\", submittedData)\n//     const userIndex = allUsers.findIndex((user) => user.email === data?.email)\n\n//     // check email is already exists or not\n//     const emailExists = allUsers?.filter(\n//       (user) => user.email === submittedData.email\n//     )\n\n//     console.log(emailExists.length)\n\n//     if (emailExists.length > 0 && submittedData.email !== data?.email) {\n//       setError(\"Email Already exists.\")\n//       setTimeout(() => {\n//         setError(\"\")\n//       }, 2000)\n//     } else {\n//       if (userIndex !== -1) {\n//         // Update the user's data with the submitted data\n//         allUsers[userIndex] = { ...data, ...submittedData }\n\n//         // Save the updated data back to local storage\n//         localStorage.setItem(\"users\", JSON.stringify(allUsers))\n\n//         // Set a success message\n//         setSuccessMessage(\"Profile updated successfully\")\n\n//         // Clear the success message after 5 seconds (5000 milliseconds)\n//         setTimeout(() => {\n//           setSuccessMessage(\"\")\n//         }, 5000)\n//       } else {\n//         setError(\"User not found\")\n//       }\n//     }\n//   }\n\n//   const schema = yup.object().shape({\n//     firstName: yup.string().required(),\n//     lastName: yup.string().required(),\n//     mobileNumber: yup.string().min(10).max(10).required(),\n//     email: yup.string().email().required(),\n//   })\n\n//   const {\n//     handleSubmit,\n//     register,\n//     formState: { errors },\n//   } = useForm({ resolver: yupResolver(schema) })\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       {error && <p>{error}</p>}\n//       {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//       <div className=\"container\">\n//         <form onSubmit={handleSubmit(onSubmit)} className=\"signupForm\">\n//           <h3 className=\"text-center mb-4\">Edit Profile</h3>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"firstName\" className=\"form-label\">\n//               First Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               name=\"firstName\"\n//               defaultValue={data?.firstName}\n//               onChange={handleFieldChange}\n//               {...register(\"firstName\")}\n//             />\n//             <div className=\"form-text\">\n//               {errors.firstName && <>{errors.firstName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"lastName\" className=\"form-label\">\n//               Last Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"Last Name\"\n//               name=\"lastName\"\n//               {...register(\"lastName\")}\n//               defaultValue={data?.lastName}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.lastName && <>{errors.lastName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"mobileNumber\" className=\"form-label\">\n//               Mobile Number\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"number\"\n//               placeholder=\"Mobile Number\"\n//               name=\"mobileNumber\"\n//               {...register(\"mobileNumber\")}\n//               defaultValue={data?.mobileNumber}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.mobileNumber && <>{errors.mobileNumber.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               name=\"email\"\n//               {...register(\"email\")}\n//               defaultValue={data?.email}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.email && <>{errors.email.message}</>}\n//             </div>\n//           </div>\n\n//           <div>\n//             <button type=\"submit\" className=\"btn btn-primary me-3\">\n//               Save\n//             </button>\n\n//             <Link to=\"/changepassword\" className=\"me-2\">\n//               Reset Password\n//             </Link>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Profile\n\nimport { useAuth } from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport useToast from \"../hooks/useToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const auth = useAuth();\n  const {\n    showToast,\n    toastMessage\n  } = useToast();\n  const loggedInUser = auth.cookies.user;\n  // const loggedInUser = auth.user\n  console.log(loggedInUser);\n  const allUsers = JSON.parse(localStorage.getItem(\"users\"));\n  const userDetail = allUsers === null || allUsers === void 0 ? void 0 : allUsers.filter(user => {\n    return loggedInUser.email === user.email;\n  });\n  const data = userDetail[0];\n  const [userData, setUserData] = useState(data);\n  const handleFieldChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const onSubmit = submittedData => {\n    const userIndex = allUsers.findIndex(user => user.email === (data === null || data === void 0 ? void 0 : data.email));\n    const emailExists = allUsers === null || allUsers === void 0 ? void 0 : allUsers.filter(user => user.email === submittedData.email);\n    if (emailExists.length > 0 && submittedData.email !== (data === null || data === void 0 ? void 0 : data.email)) {\n      showToast(\"Email already exists.\", \"danger\");\n    } else {\n      if (userIndex !== -1) {\n        allUsers[userIndex] = {\n          ...data,\n          ...submittedData\n        };\n        localStorage.setItem(\"users\", JSON.stringify(allUsers));\n        showToast(\"Profile updated successfully\", \"success\");\n      } else {\n        showToast(\"User not found\", \"danger\");\n      }\n    }\n  };\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    mobileNumber: yup.string().min(10).max(10).required(),\n    email: yup.string().email().required()\n  });\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [toastMessage.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `alert alert-${toastMessage.type}`,\n        children: toastMessage.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          className: \"w-50 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center mb-4\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              className: \"form-label\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: \"First Name\",\n              name: \"firstName\",\n              defaultValue: data === null || data === void 0 ? void 0 : data.firstName,\n              onChange: handleFieldChange,\n              ...register(\"firstName\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastName\",\n              className: \"form-label\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: \"Last Name\",\n              name: \"lastName\",\n              ...register(\"lastName\"),\n              defaultValue: data === null || data === void 0 ? void 0 : data.lastName,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.lastName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mobileNumber\",\n              className: \"form-label\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"number\",\n              placeholder: \"Mobile Number\",\n              name: \"mobileNumber\",\n              ...register(\"mobileNumber\"),\n              defaultValue: data === null || data === void 0 ? void 0 : data.mobileNumber,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), errors.mobileNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.mobileNumber.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              placeholder: \"Email\",\n              name: \"email\",\n              ...register(\"email\"),\n              defaultValue: data === null || data === void 0 ? void 0 : data.email,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary me-3\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/changepassword\",\n              className: \"btn btn-secondary\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Profile, \"vCWSuShrIKL0Jyt0KAAMIWXYtcI=\", false, function () {\n  return [useAuth, useToast, useForm];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useAuth","Link","yup","useForm","yupResolver","useState","Navbar","useToast","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","auth","showToast","toastMessage","loggedInUser","cookies","user","console","log","allUsers","JSON","parse","localStorage","getItem","userDetail","filter","email","data","userData","setUserData","handleFieldChange","event","name","value","target","onSubmit","submittedData","userIndex","findIndex","emailExists","length","setItem","stringify","schema","object","shape","firstName","string","required","lastName","mobileNumber","min","max","handleSubmit","register","formState","errors","resolver","children","fileName","_jsxFileName","lineNumber","columnNumber","className","message","type","htmlFor","placeholder","defaultValue","onChange","to","_c","$RefreshReg$"],"sources":["/Users/ztlab98/Downloads/shopping-react-assignment-main/src/pages/Profile.js"],"sourcesContent":["// import { useAuth } from \"../utils/auth\"\n// import { Link } from \"react-router-dom\"\n// import * as yup from \"yup\"\n// import { useForm } from \"react-hook-form\"\n// import { yupResolver } from \"@hookform/resolvers/yup\"\n// import { useState } from \"react\"\n// import Navbar from \"../components/Navbar\"\n\n// const Profile = () => {\n//   const auth = useAuth()\n//   const [error, setError] = useState(false)\n//   const [successMessage, setSuccessMessage] = useState(\"\")\n\n//   const loggedInUser = auth.user\n\n//   const allUsers = JSON.parse(localStorage.getItem(\"users\"))\n//   //   const userDetail = allUsers?.find((user) => user.email === loggedInUser.email)\n//   const userDetail = allUsers?.filter((user) => {\n//     return loggedInUser.email === user.email\n//   })\n//   const data = userDetail[0]\n//   console.log(\"data\", data)\n//   const [userData, setUserData] = useState(data)\n\n//   const handleFieldChange = (event) => {\n//     // console.log(\"onchange\")\n//     const { name, value } = event.target\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     })\n//     // console.log(\"userdata\", userData)\n//   }\n\n//   const onSubmit = (submittedData) => {\n//     // console.log(\"profile\", submittedData)\n//     const userIndex = allUsers.findIndex((user) => user.email === data?.email)\n\n//     // check email is already exists or not\n//     const emailExists = allUsers?.filter(\n//       (user) => user.email === submittedData.email\n//     )\n\n//     console.log(emailExists.length)\n\n//     if (emailExists.length > 0 && submittedData.email !== data?.email) {\n//       setError(\"Email Already exists.\")\n//       setTimeout(() => {\n//         setError(\"\")\n//       }, 2000)\n//     } else {\n//       if (userIndex !== -1) {\n//         // Update the user's data with the submitted data\n//         allUsers[userIndex] = { ...data, ...submittedData }\n\n//         // Save the updated data back to local storage\n//         localStorage.setItem(\"users\", JSON.stringify(allUsers))\n\n//         // Set a success message\n//         setSuccessMessage(\"Profile updated successfully\")\n\n//         // Clear the success message after 5 seconds (5000 milliseconds)\n//         setTimeout(() => {\n//           setSuccessMessage(\"\")\n//         }, 5000)\n//       } else {\n//         setError(\"User not found\")\n//       }\n//     }\n//   }\n\n//   const schema = yup.object().shape({\n//     firstName: yup.string().required(),\n//     lastName: yup.string().required(),\n//     mobileNumber: yup.string().min(10).max(10).required(),\n//     email: yup.string().email().required(),\n//   })\n\n//   const {\n//     handleSubmit,\n//     register,\n//     formState: { errors },\n//   } = useForm({ resolver: yupResolver(schema) })\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       {error && <p>{error}</p>}\n//       {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//       <div className=\"container\">\n//         <form onSubmit={handleSubmit(onSubmit)} className=\"signupForm\">\n//           <h3 className=\"text-center mb-4\">Edit Profile</h3>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"firstName\" className=\"form-label\">\n//               First Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               name=\"firstName\"\n//               defaultValue={data?.firstName}\n//               onChange={handleFieldChange}\n//               {...register(\"firstName\")}\n//             />\n//             <div className=\"form-text\">\n//               {errors.firstName && <>{errors.firstName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"lastName\" className=\"form-label\">\n//               Last Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"Last Name\"\n//               name=\"lastName\"\n//               {...register(\"lastName\")}\n//               defaultValue={data?.lastName}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.lastName && <>{errors.lastName.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"mobileNumber\" className=\"form-label\">\n//               Mobile Number\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"number\"\n//               placeholder=\"Mobile Number\"\n//               name=\"mobileNumber\"\n//               {...register(\"mobileNumber\")}\n//               defaultValue={data?.mobileNumber}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.mobileNumber && <>{errors.mobileNumber.message}</>}\n//             </div>\n//           </div>\n\n//           <div className=\"w-25 mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               name=\"email\"\n//               {...register(\"email\")}\n//               defaultValue={data?.email}\n//               onChange={handleFieldChange}\n//             />\n//             <div className=\"form-text\">\n//               {errors.email && <>{errors.email.message}</>}\n//             </div>\n//           </div>\n\n//           <div>\n//             <button type=\"submit\" className=\"btn btn-primary me-3\">\n//               Save\n//             </button>\n\n//             <Link to=\"/changepassword\" className=\"me-2\">\n//               Reset Password\n//             </Link>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Profile\n\nimport { useAuth } from \"../utils/auth\"\nimport { Link } from \"react-router-dom\"\nimport * as yup from \"yup\"\nimport { useForm } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { useState } from \"react\"\nimport Navbar from \"../components/Navbar\"\nimport useToast from \"../hooks/useToast\"\n\nconst Profile = () => {\n  const auth = useAuth()\n\n  const { showToast, toastMessage } = useToast()\n\n  const loggedInUser = auth.cookies.user\n  // const loggedInUser = auth.user\n  console.log(loggedInUser)\n  const allUsers = JSON.parse(localStorage.getItem(\"users\"))\n  const userDetail = allUsers?.filter((user) => {\n    return loggedInUser.email === user.email\n  })\n  const data = userDetail[0]\n  const [userData, setUserData] = useState(data)\n\n  const handleFieldChange = (event) => {\n    const { name, value } = event.target\n    setUserData({\n      ...userData,\n      [name]: value,\n    })\n  }\n\n  const onSubmit = (submittedData) => {\n    const userIndex = allUsers.findIndex((user) => user.email === data?.email)\n    const emailExists = allUsers?.filter(\n      (user) => user.email === submittedData.email\n    )\n\n    if (emailExists.length > 0 && submittedData.email !== data?.email) {\n      showToast(\"Email already exists.\", \"danger\")\n    } else {\n      if (userIndex !== -1) {\n        allUsers[userIndex] = { ...data, ...submittedData }\n        localStorage.setItem(\"users\", JSON.stringify(allUsers))\n\n        showToast(\"Profile updated successfully\", \"success\")\n      } else {\n        showToast(\"User not found\", \"danger\")\n      }\n    }\n  }\n\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    mobileNumber: yup.string().min(10).max(10).required(),\n    email: yup.string().email().required(),\n  })\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) })\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-5\">\n        {toastMessage.message && (\n          <p className={`alert alert-${toastMessage.type}`}>\n            {toastMessage.message}\n          </p>\n        )}\n\n        <div className=\"container mt-4\">\n          <form onSubmit={handleSubmit(onSubmit)} className=\"w-50 mx-auto\">\n            <h3 className=\"text-center mb-4\">Edit Profile</h3>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"firstName\" className=\"form-label\">\n                First Name\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"First Name\"\n                name=\"firstName\"\n                defaultValue={data?.firstName}\n                onChange={handleFieldChange}\n                {...register(\"firstName\")}\n              />\n              {errors.firstName && (\n                <p className=\"text-danger\">{errors.firstName.message}</p>\n              )}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"lastName\" className=\"form-label\">\n                Last Name\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n                name=\"lastName\"\n                {...register(\"lastName\")}\n                defaultValue={data?.lastName}\n                onChange={handleFieldChange}\n              />\n              {errors.lastName && (\n                <p className=\"text-danger\">{errors.lastName.message}</p>\n              )}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"mobileNumber\" className=\"form-label\">\n                Mobile Number\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Mobile Number\"\n                name=\"mobileNumber\"\n                {...register(\"mobileNumber\")}\n                defaultValue={data?.mobileNumber}\n                onChange={handleFieldChange}\n              />\n              {errors.mobileNumber && (\n                <p className=\"text-danger\">{errors.mobileNumber.message}</p>\n              )}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                Email\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                {...register(\"email\")}\n                defaultValue={data?.email}\n                onChange={handleFieldChange}\n              />\n              {errors.email && (\n                <p className=\"text-danger\">{errors.email.message}</p>\n              )}\n            </div>\n\n            <div>\n              <button type=\"submit\" className=\"btn btn-primary me-3\">\n                Save\n              </button>\n              <Link to=\"/changepassword\" className=\"btn btn-secondary\">\n                Reset Password\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Profile\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGd,OAAO,CAAC,CAAC;EAEtB,MAAM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"},"metadata":{},"sourceType":"module","externalDependencies":[]}